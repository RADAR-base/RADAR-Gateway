name: Release

on:
  release:
    types: [published]

env:
  REGISTRY: ghcr.io
  REPOSITORY: ${{ github.repository }}
  IMAGE_NAME: radar-gateway

jobs:
  upload:
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
      - uses: actions/checkout@v5

      - uses: actions/setup-java@v5
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Compile code
        run: ./gradlew assemble

      - name: Upload to GitHub
        uses: AButler/upload-release-assets@v3.0
        with:
          files: 'radar-gateway/build/libs/*;radar-gateway/build/distributions/*'
          repo-token: ${{ secrets.GITHUB_TOKEN }}

  # Build and push tagged release docker image
  docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      # Setup docker build environment
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Lowercase image name
        run: |
          echo "DOCKER_IMAGE=${REGISTRY}/${REPOSITORY,,}/${IMAGE_NAME}" >>${GITHUB_ENV}

      # Add Docker labels and tags
      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_IMAGE }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Build docker
        uses: docker/build-push-action@v6
        with:
          # Allow running the image on the architectures supported by openjdk:17-jre-slim
          platforms: linux/amd64,linux/arm64
          context: .
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          # Use runtime labels from docker_meta as well as fixed labels
          labels: |
            ${{ steps.docker_meta.outputs.labels }}
            maintainer=Pim van Nierop <pim@thehyve.nl>
            org.opencontainers.image.authors=Pim van Nierop <pim@thehyve.nl>
            org.opencontainers.image.vendor=RADAR-base
            org.opencontainers.image.licenses=Apache-2.0

      - name: Inspect docker image
        run: |
          docker pull ${{ env.DOCKER_IMAGE }}:${{ steps.docker_meta.outputs.version }}
          docker image inspect ${{ env.DOCKER_IMAGE }}:${{ steps.docker_meta.outputs.version }}
